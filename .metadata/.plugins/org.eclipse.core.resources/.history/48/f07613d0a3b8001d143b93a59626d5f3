package chapter3.B_VariableMethod;

// 메서드
// 특정 작업을 수행하는 일련의 문장들을 하나로 묶은 것
// 작업을 미리 작성해둔 것
// 메서드에 넣을 값과 반환 값만 알면 됨 (Black Box 구조)

// 메서드의 장점
// 1. 높은 재사용성: 한번 만들어 놓은 메서드를 반복해서 사용가능
// 2. 중복 코드 제거: 반복적으로 나타나는 문장들을 메서드로 만들어서 사용하면
//                 코드의 중복을 제거할 수 있고 수정이 발생하면 하나의 코드만 수정하면 됨
// 3. 프로그램을 구조화: 작업 단위로 여러 개의 메서드에 담아 프로그램을 구조화 할 수 있음

	class HigherMathematics {
		final double PIE = 3.14;
		
		double getTriangleSize(double underside, double height) {
			double size = 0.5 * underside * height;
			return size;
		}
		double getCircleSize(double radius) {
			double size = PIE * radius * radius;
			return size;
		}
		double getCircumference(double radius) {
			double circumference = PIE * 2* radius;
			return circumference;
		}
	}

public class Method1 {

	// 메서드의 선언부
	// [접근제어자 기타제어자] 반환타입 메서드명([매개변수[, ...]) 
	public static void main(String[] args) {
	// 메서드의 구현부
	// 실제 프로그램의 절차를 작성하는 부분
	// return 데이터; 로 결과를 반환시켜줌
	// (반환 타입이 void이면 return;으로 메서드를 종료시킴)
	
		HigherMathematics math = new HigherMathematics();
		double size = math.getTriangleSize(10, 10);
		System.err.println(size);
	
		double circleSize = math.getCircleSize(5);
		System.out.println(circleSize);
		
		
	
	
	}

}
